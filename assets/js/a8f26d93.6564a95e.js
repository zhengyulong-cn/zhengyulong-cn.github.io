"use strict";(self.webpackChunkprivate_long_blog=self.webpackChunkprivate_long_blog||[]).push([[2481],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),k=l,d=u["".concat(s,".").concat(k)]||u[k]||m[k]||r;return n?a.createElement(d,o(o({ref:t},c),{},{components:n})):a.createElement(d,o({ref:t},c))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=k;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:l,o[1]=i;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},579:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var a=n(7462),l=(n(7294),n(3905));const r={},o="Jest\u4f7f\u7528\u6559\u7a0b",i={unversionedId:"programing-skills/\u524d\u7aef\u8c03\u8bd5\u548c\u6d4b\u8bd5/Jest\u4f7f\u7528\u6559\u7a0b/index",id:"programing-skills/\u524d\u7aef\u8c03\u8bd5\u548c\u6d4b\u8bd5/Jest\u4f7f\u7528\u6559\u7a0b/index",title:"Jest\u4f7f\u7528\u6559\u7a0b",description:"\u5f00\u59cb",source:"@site/docs/programing-skills/\u524d\u7aef\u8c03\u8bd5\u548c\u6d4b\u8bd5/Jest\u4f7f\u7528\u6559\u7a0b/index.md",sourceDirName:"programing-skills/\u524d\u7aef\u8c03\u8bd5\u548c\u6d4b\u8bd5/Jest\u4f7f\u7528\u6559\u7a0b",slug:"/programing-skills/\u524d\u7aef\u8c03\u8bd5\u548c\u6d4b\u8bd5/Jest\u4f7f\u7528\u6559\u7a0b/",permalink:"/docs/programing-skills/\u524d\u7aef\u8c03\u8bd5\u548c\u6d4b\u8bd5/Jest\u4f7f\u7528\u6559\u7a0b/",draft:!1,tags:[],version:"current",frontMatter:{}},s={},p=[{value:"\u5f00\u59cb",id:"\u5f00\u59cb",level:2},{value:"\u4f7f\u7528Jest",id:"\u4f7f\u7528jest",level:3},{value:"\u4f7f\u7528TypeScript",id:"\u4f7f\u7528typescript",level:3},{value:"\u5339\u914d\u5668",id:"\u5339\u914d\u5668",level:2},{value:"\u6d4b\u8bd5\u5f02\u6b65\u4ee3\u7801",id:"\u6d4b\u8bd5\u5f02\u6b65\u4ee3\u7801",level:2},{value:"Promise",id:"promise",level:3},{value:"Async/Await",id:"asyncawait",level:3},{value:"\u56de\u8c03",id:"\u56de\u8c03",level:3},{value:"\u5b89\u88c5\u548c\u79fb\u51fa",id:"\u5b89\u88c5\u548c\u79fb\u51fa",level:2},{value:"\u6a21\u62df\u51fd\u6570",id:"\u6a21\u62df\u51fd\u6570",level:2},{value:"\u4f7f\u7528mock\u51fd\u6570",id:"\u4f7f\u7528mock\u51fd\u6570",level:3},{value:"\u624b\u5199mock\u8986\u76d6\u6a21\u5757\u4f9d\u8d56",id:"\u624b\u5199mock\u8986\u76d6\u6a21\u5757\u4f9d\u8d56",level:3},{value:"\u66ff\u6362\u6307\u5b9a\u8fd4\u56de\u503c",id:"\u66ff\u6362\u6307\u5b9a\u8fd4\u56de\u503c",level:3}],c={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,l.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"jest\u4f7f\u7528\u6559\u7a0b"},"Jest\u4f7f\u7528\u6559\u7a0b"),(0,l.kt)("h2",{id:"\u5f00\u59cb"},"\u5f00\u59cb"),(0,l.kt)("h3",{id:"\u4f7f\u7528jest"},"\u4f7f\u7528Jest"),(0,l.kt)("p",null,"\u4f9d\u8d56\u5b89\u88c5\u548c",(0,l.kt)("inlineCode",{parentName:"p"},"package.json"),"\u914d\u7f6e\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save-dev jest\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "scripts": {\n    "test": "jest"\n  }\n}\n')),(0,l.kt)("h3",{id:"\u4f7f\u7528typescript"},"\u4f7f\u7528TypeScript"),(0,l.kt)("p",null,"\u5b89\u88c5Babel\u548cTypeScript\u76f8\u5173\u4f9d\u8d56\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm install babel-jest @babel/core @babel/preset-env @babel/preset-typescript --save-dev\n")),(0,l.kt)("p",null,"\u914d\u7f6e",(0,l.kt)("inlineCode",{parentName:"p"},"babel.config.js"),"\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"module.exports = {\n  presets: [\n    ['@babel/preset-env', {targets: {node: 'current'}}],\n    '@babel/preset-typescript',\n  ],\n};\n")),(0,l.kt)("h2",{id:"\u5339\u914d\u5668"},"\u5339\u914d\u5668"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"test('two plus two is four', () => {\n  // .toBe(4)\u662f\u5339\u914d\u5668\n  expect(2 + 2).toBe(4);\n});\n\ntest('\u5bf9\u8c61\u8d4b\u503c', () => {\n  const data = {one: 1};\n  data['two'] = 2;\n  expect(data).toEqual({one: 1, two: 2});\n});\n")),(0,l.kt)("p",null,"\u5339\u914d\u5668\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"toBe"),"\uff1a\u4e25\u683c\u7b49\u4e8e"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"toEqual"),"\u548c",(0,l.kt)("inlineCode",{parentName:"li"},"toStrictEqual"),"\uff1a\u5bf9\u8c61\u5339\u914d",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"toStrictEqual"),"\u4f1a\u8003\u8651",(0,l.kt)("inlineCode",{parentName:"li"},"undefined"),"\u7684\u503c"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"toBeNull"),"\uff1a\u53ea\u5339\u914d ",(0,l.kt)("inlineCode",{parentName:"li"},"null")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"toBeUndefined"),"\uff1a\u53ea\u5339\u914d ",(0,l.kt)("inlineCode",{parentName:"li"},"undefined"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"toBeDefined")," \u4e0e ",(0,l.kt)("inlineCode",{parentName:"li"},"toBeUndefined")," \u76f8\u53cd"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"toBeTruthy"),"\uff1a\u5339\u914d\u4efb\u4f55 ",(0,l.kt)("inlineCode",{parentName:"li"},"if")," \u8bed\u53e5\u4e3a\u771f",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"toBeFalsy"),"\uff1a\u5339\u914d\u4efb\u4f55 ",(0,l.kt)("inlineCode",{parentName:"li"},"if")," \u8bed\u53e5\u4e3a\u5047"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"toBeGreaterThan"),"\uff1a\u5927\u4e8e\u6570\u5b57",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"toBeGreaterThanOrEqual"),"\uff1a\u5927\u4e8e\u7b49\u4e8e\u6570\u5b57"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"toBeLessThan"),"\uff1a\u5c0f\u4e8e\u6570\u5b57"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"toBeLessThanOrEqual"),"\uff1a\u5c0f\u4e8e\u7b49\u4e8e\u6570\u5b57"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"toMatch"),"\uff1a\u5339\u914d\u6b63\u5219"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"toContain"),"\uff1a\u68c0\u67e5\u6570\u7ec4\u6216\u53ef\u8fed\u4ee3\u5bf9\u8c61\u662f\u5426\u5305\u542b\u67d0\u4e2a\u7279\u5b9a\u9879"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"toThrow"),"\uff1a\u629b\u51fa\u9519\u8bef")),(0,l.kt)("p",null,"::: tip"),(0,l.kt)("p",null,"\u53ef\u4ee5\u901a\u8fc7",(0,l.kt)("inlineCode",{parentName:"p"},".not.toBe()"),"\u6765\u53d6\u53cd\u3002"),(0,l.kt)("p",null,"\u53ef\u4ee5\u901a\u8fc7",(0,l.kt)("inlineCode",{parentName:"p"},"test.only()"),"\u6765\u53ea\u8fd0\u884c\u8be5\u7528\u4f8b\u3002"),(0,l.kt)("p",null,":::"),(0,l.kt)("h2",{id:"\u6d4b\u8bd5\u5f02\u6b65\u4ee3\u7801"},"\u6d4b\u8bd5\u5f02\u6b65\u4ee3\u7801"),(0,l.kt)("h3",{id:"promise"},"Promise"),(0,l.kt)("p",null,"\u7b49\u5f85resolve\u72b6\u6001\uff0c\u5339\u914d\u5230\u8868\u793a\u6d4b\u8bd5\u6210\u529f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"test('the data is peanut butter', () => {\n  return fetchData().then(data => {\n    expect(data).toBe('peanut butter');\n  });\n});\n")),(0,l.kt)("h3",{id:"asyncawait"},"Async/Await"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"test('the data is peanut butter', async () => {\n  const data = await fetchData();\n  expect(data).toBe('peanut butter');\n});\n\n// \u4e5f\u53ef\u4ee5\u5c06async/await\u548c.resolves\u6216.rejects\u4e00\u8d77\u4f7f\u7528\ntest('the data is peanut butter', async () => {\n  await expect(fetchData()).resolves.toBe('peanut butter');\n});\n")),(0,l.kt)("h3",{id:"\u56de\u8c03"},"\u56de\u8c03"),(0,l.kt)("p",null,"\u5c06\u5e26\u6709\u6d4b\u8bd5\u5339\u914d\u8bed\u53e5\u7684\u51fd\u6570\u4ee5\u56de\u8c03\u7684\u5f62\u5f0f\u4f20\u5165"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"test('the data is peanut butter', done => {\n  function callback(error, data) {\n    if (error) {\n      done(error);\n      return;\n    }\n    try {\n      expect(data).toBe('peanut butter');\n      done();\n    } catch (error) {\n      done(error);\n    }\n  }\n\n  fetchData(callback);\n});\n")),(0,l.kt)("h2",{id:"\u5b89\u88c5\u548c\u79fb\u51fa"},"\u5b89\u88c5\u548c\u79fb\u51fa"),(0,l.kt)("p",null,"\u8fd0\u884c\u6d4b\u8bd5\u524d\u540e\u53ef\u4ee5\u505a\u4e00\u4e9b\u51c6\u5907\u5de5\u4f5c\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"beforeAll"),(0,l.kt)("li",{parentName:"ul"},"beforeEach"),(0,l.kt)("li",{parentName:"ul"},"afterAll"),(0,l.kt)("li",{parentName:"ul"},"afterEach")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"// \u5728\u6bcf\u6b21\u6d4b\u8bd5\u524d\u8c03\u7528initializeCityDatabase\u65b9\u6cd5\uff0c\u5728\u6bcf\u6b21\u6d4b\u8bd5\u540e\u8c03\u7528clearCityDatabase\u65b9\u6cd5\nbeforeEach(() => {\n  initializeCityDatabase();\n});\n\nafterEach(() => {\n  clearCityDatabase();\n});\n\ntest('city database has Vienna', () => {\n  expect(isCity('Vienna')).toBeTruthy();\n});\n\ntest('city database has San Juan', () => {\n  expect(isCity('San Juan')).toBeTruthy();\n});\n")),(0,l.kt)("h2",{id:"\u6a21\u62df\u51fd\u6570"},"\u6a21\u62df\u51fd\u6570"),(0,l.kt)("h3",{id:"\u4f7f\u7528mock\u51fd\u6570"},"\u4f7f\u7528mock\u51fd\u6570"),(0,l.kt)("p",null,"\u901a\u8fc7\u8c03\u7528",(0,l.kt)("inlineCode",{parentName:"p"},"jest.fn()"),"\u51fd\u6570\u51fd\u6570\u521b\u5efamock\u51fd\u6570\uff0c\u4f20\u5165\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c",(0,l.kt)("strong",{parentName:"p"},"\u56de\u8c03\u51fd\u6570\u5c31\u662f\u751f\u6210\u7684mock\u7684\u4f20\u5165\u53c2\u6570\u548c\u8fd4\u56de\u503c"),"\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"test('jest/mock Test', () => {\n  const myMock = jest.fn(x => x + 100)\n  const res1 = myMock(52)\n  const res2 = myMock(88)\n  console.log(res1, res2, myMock(1), myMock.mock)   // 152 188 101\n})\n")),(0,l.kt)("p",null,"\u751f\u6210\u7684mock\u51fd\u6570\u7684",(0,l.kt)("inlineCode",{parentName:"p"},".mock"),"\u5c5e\u6027\u4f1a\u4fdd\u5b58\u8be5\u51fd\u6570\u5982\u4f55\u88ab\u8c03\u7528\u3001\u8c03\u7528\u65f6\u8fd4\u56de\u503c\u4fe1\u606f\u3002"),(0,l.kt)("p",null,"\u6bd4\u5982\u5728\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"myMock.mock"),"\u6253\u5370\u8f93\u51fa\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},"{\n  calls: [ [ 52 ], [ 88 ], [ 1 ] ],\n  contexts: [ undefined, undefined, undefined ],\n  instances: [ undefined, undefined, undefined ],\n  invocationCallOrder: [ 1, 2, 3 ],\n  results: [\n    { type: 'return', value: 152 },\n    { type: 'return', value: 188 },\n    { type: 'return', value: 101 }\n  ],\n  lastCall: [ 1 ]\n}\n")),(0,l.kt)("p",null,"\u9664\u4e86\u4e0a\u8ff0\u4f20\u5165\u56de\u8c03\u51fd\u6570\u65b9\u5f0f\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7",(0,l.kt)("inlineCode",{parentName:"p"},"mockReturnValue"),"\u548c",(0,l.kt)("inlineCode",{parentName:"p"},"mockReturnValueOnce"),"\u51fd\u6570\u6765\u624b\u52a8\u8bbe\u7f6emock\u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const myMock = jest.fn();\nconsole.log(myMock());      // undefined\nmyMock.mockReturnValueOnce(10).mockReturnValueOnce('x').mockReturnValue(true);\nconsole.log(myMock(), myMock(), myMock(), myMock());    // 10, 'x', true, true\n")),(0,l.kt)("h3",{id:"\u624b\u5199mock\u8986\u76d6\u6a21\u5757\u4f9d\u8d56"},"\u624b\u5199mock\u8986\u76d6\u6a21\u5757\u4f9d\u8d56"),(0,l.kt)("p",null,"\u4e3a\u4e86\u6d4b\u8bd5",(0,l.kt)("inlineCode",{parentName:"p"},"getUsers()"),"\u65b9\u6cd5\u800c\u4e0d\u5b9e\u9645\u8c03\u7528API\uff0c\u53ef\u4ee5\u7528",(0,l.kt)("inlineCode",{parentName:"p"},"jest.mock()"),"\u51fd\u6570\u81ea\u52a8\u6a21\u62dfaxios\u6a21\u5757\u3002\u6a21\u62df\u6a21\u5757\u540e\uff0c\u53ef\u4ee5\u4e3a",(0,l.kt)("inlineCode",{parentName:"p"},".get"),"\u63d0\u4f9b",(0,l.kt)("inlineCode",{parentName:"p"},"mockResolvedValue"),"\u6765\u7528\u4e8e\u5047\u6570\u636e\u6d4b\u8bd5\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import axios from 'axios';\njest.mock('axios');\nfunction getUsers() {\n  return axios.get('/users.json').then(resp => resp.data)\n}\ntest('should fetch users', () => {\n  const users = [{name: 'Bob'}]\n  const resp = {data: users}\n  axios.get.mockResolvedValue(resp)\n  return getUsers().then(data => expect(data).toEqual(users))\n});\n")),(0,l.kt)("h3",{id:"\u66ff\u6362\u6307\u5b9a\u8fd4\u56de\u503c"},"\u66ff\u6362\u6307\u5b9a\u8fd4\u56de\u503c"),(0,l.kt)("p",null,"\u66ff\u6362\u51fd\u6570\u8fd4\u56de\u503c"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"jest.fn")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"mockImplementationOnce"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const myMockFn = jest.fn(cb => cb(null, true));\nmyMockFn((err, val) => console.log(val));   // true\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"// \u5f53mockImplementationOnce\u5b9a\u4e49\u7684\u5b9e\u73b0\u9010\u4e2a\u8c03\u7528\u5b8c\u6bd5\u65f6\uff0c\u5982\u679c\u5b9a\u4e49\u4e86jest.fn\u5219\u4f7f\u7528jest.fn \u3002\nconst myMockFn = jest\n  .fn()\n  .mockImplementationOnce(cb => cb(null, true))\n  .mockImplementationOnce(cb => cb(null, false));\nmyMockFn((err, val) => console.log(val));   // true\nmyMockFn((err, val) => console.log(val));   // false\n")),(0,l.kt)("p",null,"\u66ff\u6362\u6a21\u5757\u7684\u8fd4\u56de\u503c\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"jest.mock('../foo'); // this happens automatically with automocking\nconst foo = require('../foo');\n// foo\u662f\u4e2amock\u51fd\u6570\nfoo.mockImplementation(() => 42);\nfoo();  // 42\n")))}m.isMDXComponent=!0}}]);