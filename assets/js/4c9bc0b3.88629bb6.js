"use strict";(self.webpackChunkprivate_long_blog=self.webpackChunkprivate_long_blog||[]).push([[4865],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>k});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=r.createContext({}),s=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(o.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(t),m=a,k=u["".concat(o,".").concat(m)]||u[m]||d[m]||l;return t?r.createElement(k,p(p({ref:n},c),{},{components:t})):r.createElement(k,p({ref:n},c))}));function k(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,p=new Array(l);p[0]=m;var i={};for(var o in n)hasOwnProperty.call(n,o)&&(i[o]=n[o]);i.originalType=e,i[u]="string"==typeof e?e:a,p[1]=i;for(var s=2;s<l;s++)p[s]=t[s];return r.createElement.apply(null,p)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3909:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>p,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var r=t(7462),a=(t(7294),t(3905));const l={},p="\u64cd\u4f5c\u7cfb\u7edf\u7406\u8bba",i={unversionedId:"backend-programing-skills/\u64cd\u4f5c\u7cfb\u7edf/\u64cd\u4f5c\u7cfb\u7edf\u7406\u8bba/index",id:"backend-programing-skills/\u64cd\u4f5c\u7cfb\u7edf/\u64cd\u4f5c\u7cfb\u7edf\u7406\u8bba/index",title:"\u64cd\u4f5c\u7cfb\u7edf\u7406\u8bba",description:"\u4e00\u3001\u64cd\u4f5c\u7cfb\u7edf\u7406\u8bba\u4ecb\u7ecd",source:"@site/docs/backend-programing-skills/\u64cd\u4f5c\u7cfb\u7edf/\u64cd\u4f5c\u7cfb\u7edf\u7406\u8bba/index.md",sourceDirName:"backend-programing-skills/\u64cd\u4f5c\u7cfb\u7edf/\u64cd\u4f5c\u7cfb\u7edf\u7406\u8bba",slug:"/backend-programing-skills/\u64cd\u4f5c\u7cfb\u7edf/\u64cd\u4f5c\u7cfb\u7edf\u7406\u8bba/",permalink:"/docs/backend-programing-skills/\u64cd\u4f5c\u7cfb\u7edf/\u64cd\u4f5c\u7cfb\u7edf\u7406\u8bba/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"backend-programing-skills",previous:{title:"\u540e\u7aef\u7f16\u7a0b\u6280\u672f",permalink:"/docs/backend-programing-skills/"}},o={},s=[{value:"\u4e00\u3001\u64cd\u4f5c\u7cfb\u7edf\u7406\u8bba\u4ecb\u7ecd",id:"\u4e00\u64cd\u4f5c\u7cfb\u7edf\u7406\u8bba\u4ecb\u7ecd",level:2},{value:"\u865a\u62df\u5316CPU",id:"\u865a\u62df\u5316cpu",level:3},{value:"\u865a\u62df\u5316\u5185\u5b58",id:"\u865a\u62df\u5316\u5185\u5b58",level:3},{value:"\u5e76\u53d1",id:"\u5e76\u53d1",level:3},{value:"\u6301\u4e45\u6027",id:"\u6301\u4e45\u6027",level:3},{value:"\u4e8c\u3001\u8fdb\u7a0b",id:"\u4e8c\u8fdb\u7a0b",level:2},{value:"\u8fdb\u7a0b\u6982\u5ff5",id:"\u8fdb\u7a0b\u6982\u5ff5",level:3},{value:"\u8fdb\u7a0b\u521b\u5efa",id:"\u8fdb\u7a0b\u521b\u5efa",level:3},{value:"\u8fdb\u7a0b\u72b6\u6001",id:"\u8fdb\u7a0b\u72b6\u6001",level:3},{value:"\u8fdb\u7a0b\u4fe1\u606f\u7684\u6570\u636e\u7ed3\u6784\uff08PCB\uff09",id:"\u8fdb\u7a0b\u4fe1\u606f\u7684\u6570\u636e\u7ed3\u6784pcb",level:3},{value:"\u8fdb\u7a0bAPI",id:"\u8fdb\u7a0bapi",level:3}],c={toc:s},u="wrapper";function d(e){let{components:n,...l}=e;return(0,a.kt)(u,(0,r.Z)({},c,l,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u64cd\u4f5c\u7cfb\u7edf\u7406\u8bba"},"\u64cd\u4f5c\u7cfb\u7edf\u7406\u8bba"),(0,a.kt)("h2",{id:"\u4e00\u64cd\u4f5c\u7cfb\u7edf\u7406\u8bba\u4ecb\u7ecd"},"\u4e00\u3001\u64cd\u4f5c\u7cfb\u7edf\u7406\u8bba\u4ecb\u7ecd"),(0,a.kt)("p",null,"\u7a0b\u5e8f\u8fd0\u884c\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u6b63\u5728\u8fd0\u884c\u7684\u7a0b\u5e8f\u4f1a\u505a\u4e00\u4ef6\u7b80\u5355\u7684\u4e8b\u60c5\uff1a",(0,a.kt)("strong",{parentName:"p"},"\u6267\u884c\u6307\u4ee4"),"\u3002\u5904\u7406\u5668\u4ece\u5185\u5b58\u4e2d\u83b7\u53d6\u6307\u4ee4\uff0c\u5bf9\u5176\u89e3\u7801\uff0c\u7136\u540e\u6267\u884c\u5b83\uff0c\u5b8c\u6210\u8fd9\u6761\u6307\u4ee4\u540e\uff0c\u5904\u7406\u5668\u4f1a\u7ee7\u7eed\u6267\u884c\u4e0b\u4e00\u6761\uff0c\u4f9d\u6b21\u7c7b\u63a8\uff0c\u76f4\u5230\u7a0b\u5e8f\u6700\u7ec8\u5b8c\u6210\u3002"),(0,a.kt)("p",null,"\u64cd\u4f5c\u7cfb\u7edf\u662f\u8f6f\u4ef6\uff0c\u901a\u8fc7\u865a\u62df\u5316\u6280\u672f\u8ba9\u7a0b\u5e8f\u8fd0\u884c\u53d8\u5f97\u66f4\u5bb9\u6613\uff0c\u5373",(0,a.kt)("strong",{parentName:"p"},"\u64cd\u4f5c\u7cfb\u7edf\u5c06\u7269\u7406\u8d44\u6e90\u8f6c\u5316\u4e3a\u66f4\u901a\u7528\u66f4\u5f3a\u5927\u7684\u865a\u62df\u5f62\u5f0f"),"\uff0c\u626e\u6f14\u8d44\u6e90\u7ba1\u7406\u89d2\u8272\uff08\u5982CPU\u3001\u5185\u5b58\u3001\u78c1\u76d8\u7b49\u7b49\uff09\u3002\u4e3a\u4e86\u8ba9\u7528\u6237\u53ef\u4ee5\u544a\u8bc9\u64cd\u4f5c\u7cfb\u7edf\u505a\u4ec0\u4e48\uff0c\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u4e00\u4e9b\u63a5\u53e3\uff08API\uff09\u4f9b\u8c03\u7528\u3002\u7531\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u8fd9\u4e9b\u8c03\u7528\u6765\u8fd0\u884c\u7a0b\u5e8f\u3001\u8bbf\u95ee\u5185\u5b58\u548c\u8bbe\u5907\uff0c\u5e76\u8fdb\u884c\u5176\u4ed6\u76f8\u5173\u64cd\u4f5c\uff0c\u6211\u4eec\u6709\u65f6\u4e5f\u8bf4\u64cd\u4f5c\u7cfb\u7edf\u4e3a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u4e00\u4e2a",(0,a.kt)("strong",{parentName:"p"},"\u6807\u51c6\u5e93"),"\u3002"),(0,a.kt)("h3",{id:"\u865a\u62df\u5316cpu"},"\u865a\u62df\u5316CPU"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n#include <stdlib.h>\n#include <sys/time.h>\n#include <assert.h>\n#include "common.h"\n\nint\nmain(int argc, char *argv[])\n{\n    if (argc != 2) {\n        fprintf(stderr, "usage: cpu <string>\\n");\n        exit(1);\n    }\n    char *str = argv[1];\n    while (1) {\n        Spin(1);\n        printf("%s\\n", str);\n    }\n    return 0;\n}\n')),(0,a.kt)("p",null,"\u5bf9\u4e8e\u4e0a\u8ff0\u7a0b\u5e8f\uff0c\u8fd0\u884c\u540c\u4e00\u4e2a\u7a0b\u5e8f\u7684\u8bb8\u591a\u4e0d\u540c\u5b9e\u4f8b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"prompt> ./cpu A & ; ./cpu B & ; ./cpu C & ; ./cpu D &\n[1] 7353\n[2] 7354\n[3] 7355\n[4] 7356\nA\nB\nD\nC\nA\nB\nD\nC\nA\nC\nB\nD\n...\n")),(0,a.kt)("p",null,"\u6253\u5370\u8f93\u51fa\u7684\u7ed3\u679c\uff0c\u770b\u7740\u4f3c\u4e4e4\u4e2a\u7a0b\u5e8f\u5728\u540c\u65f6\u8fd0\u884c\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u786c\u4ef6\u5e2e\u52a9\u4e0b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5728\u8fd0\u884c\u591a\u4e2a\u7a0b\u5e8f\u65f6\u4f1a\u63d0\u4f9b\u62e5\u6709\u975e\u5e38\u591aCPU\u7684\u5047\u8c61\u3002",(0,a.kt)("strong",{parentName:"p"},"\u5c06\u5355\u4e2aCPU\u8f6c\u6362\u4e3a\u770b\u4f3c\u65e0\u9650\u6570\u91cf\u7684CPU\uff0c\u4ece\u800c\u8ba9\u8bb8\u591a\u7a0b\u5e8f\u770b\u4f3c\u540c\u65f6\u8fd0\u884c\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u865a\u62df\u5316CPU\u3002"),"\u5f53\u7136\u8981\u505c\u6b62\u5b83\u4eec\uff0c\u6216\u544a\u8bc9\u64cd\u4f5c\u7cfb\u7edf\u8fd0\u884c\u54ea\u4e9b\u7a0b\u5e8f\uff0c\u9700\u8981\u8c03\u7528\u76f8\u5173\u63a5\u53e3\u3002"),(0,a.kt)("h3",{id:"\u865a\u62df\u5316\u5185\u5b58"},"\u865a\u62df\u5316\u5185\u5b58"),(0,a.kt)("p",null,"\u5185\u5b58\u662f\u4e00\u4e2a\u5b57\u8282\u6570\u7ec4\uff0c\u8981\u8bfb\u53d6\u5c31\u5fc5\u987b\u6307\u5b9a\u4e00\u4e2a\u5730\u5740\uff0c\u8981\u5199\u5165\u5fc5\u987b\u6307\u5b9a\u5730\u5740\u548c\u5199\u5165\u503c\u3002\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\uff0c\u5c06\u6240\u6709\u6570\u636e\u7ed3\u6784\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u5e76\u901a\u8fc7\u5404\u79cd\u6307\u4ee4\u6765\u8bbf\u95ee\u5b83\u4eec\u3002"),(0,a.kt)("p",null,"\u4e0b\u9762\u662f\u4e00\u4e2a\u8bbf\u95ee\u5185\u5b58\u7684\u7a0b\u5e8f\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <unistd.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include "common.h"\n\nint\nmain(int argc, char *argv[])\n{\n    int *p = malloc(sizeof(int));              // \u5206\u914d\u4e00\u4e9b\u5185\u5b58\n    assert(p != NULL);\n    printf("(%d) memory address of p: %08x\\n",\n           getpid(), (unsigned) p);            // \u6253\u5370\u51fa\u5185\u5b58\u5730\u5740\n    *p = 0;                                    // \u5c06\u6570\u5b570\u653e\u5165\u65b0\u5206\u914d\u7684\u5185\u5b58\u7684\u7b2c\u4e00\u4e2a\u7a7a\u4f4d\u4e2d\n    while (1) {\n        Spin(1);\n        *p = *p + 1;\n         printf("(%d) p: %d\\n", getpid(), *p); // \u5faa\u73af\u7a0b\u5e8f\uff0c\u5ef6\u8fdf1\u79d2\u5e76\u9012\u589ep\u4e2d\u4fdd\u5b58\u7684\u5730\u5740\u503c\n    }\n    return 0;\n}\n')),(0,a.kt)("p",null,"\u6267\u884c\u5e76\u8f93\u51fa\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"prompt> ./mem\n(2134) memory address of p: 00200000\n(2134) p: 1\n(2134) p: 2\n(2134) p: 3\n(2134) p: 4\n(2134) p: 5\n\u02c6C\n")),(0,a.kt)("p",null,"\u4e0a\u9762\u8f93\u51fa\u662f\u610f\u6599\u4e4b\u4e2d\u7684\uff0c\u8bd5\u8bd5\u8fd0\u884c\u540c\u4e00\u4e2a\u7a0b\u5e8f\u7684\u591a\u4e2a\u5b9e\u4f8b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"prompt> ./mem &; ./mem & \n[1] 24113\n[2] 24114\n(24113) memory address of p: 00200000\n(24114) memory address of p: 00200000\n(24113) p: 1\n(24114) p: 1\n(24114) p: 2\n(24113) p: 2\n(24113) p: 3\n(24114) p: 3\n(24113) p: 4\n(24114) p: 4\n...\n")),(0,a.kt)("p",null,"\u5b9e\u9645\u4e0a\uff0c\u8fd9\u624d\u662f\u64cd\u4f5c\u7cfb\u7edf\u865a\u62df\u5316\u5185\u5b58\u65f6\u53d1\u751f\u7684\u60c5\u51b5\uff0c",(0,a.kt)("strong",{parentName:"p"},"\u6bcf\u4e2a\u8fdb\u7a0b\u8bbf\u95ee\u81ea\u5df1\u7684\u79c1\u6709\u865a\u62df\u5730\u5740\u7a7a\u95f4"),"\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4ee5\u67d0\u79cd\u65b9\u5f0f\u6620\u5c04\u5230\u673a\u5668\u7684\u7269\u7406\u5185\u5b58\u4e0a\u3002",(0,a.kt)("strong",{parentName:"p"},"\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u7a0b\u5e8f\u4e2d\u7684\u5185\u5b58\u5f15\u7528\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u8fdb\u7a0b\uff08\u6216\u64cd\u4f5c\u7cfb\u7edf\u672c\u8eab\uff09\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u5bf9\u4e8e\u6b63\u5728\u8fd0\u884c\u7684\u7a0b\u5e8f\uff0c\u5b83\u5b8c\u5168\u62e5\u6709\u81ea\u5df1\u7684\u7269\u7406\u5185\u5b58\u3002")),(0,a.kt)("h3",{id:"\u5e76\u53d1"},"\u5e76\u53d1"),(0,a.kt)("p",null,"\u5982\u4e0a\u9762\u6240\u793a\uff0c\u5e76\u53d1\u53ef\u4ee5\u5b58\u5728\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u672c\u8eab\u7684\uff0c\u4f46\u5e76\u4e0d\u5c40\u9650\u4e8e\u6b64\uff0c\u73b0\u4ee3\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u4e5f\u5b58\u5728\u76f8\u540c\u95ee\u9898\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n#include <stdlib.h>\n#include "common.h"\n\nvolatile int counter = 0;\nint loops;\n\nvoid *worker(void *arg) {\n    int i;\n    for (i = 0; i < loops; i++) {\n        counter++;\n    }\n    return NULL;\n}\n\nint\nmain(int argc, char *argv[])\n{ \n    if (argc != 2) {\n        fprintf(stderr, "usage: threads <value>\\n");\n        exit(1);\n    }\n    loops = atoi(argv[1]);\n    pthread_t p1, p2;\n    printf("Initial value : %d\\n", counter);\n    // \u4e3b\u7a0b\u5e8f\u5229\u7528Pthread_create()\u521b\u5efa\u4e24\u4e2a\u7ebf\u7a0b\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u8fd0\u884c\u5728workder()\u4e2d\n    Pthread_create(&p1, NULL, worker, NULL);\n    Pthread_create(&p2, NULL, worker, NULL);\n    Pthread_join(p1, NULL);\n    Pthread_join(p2, NULL);\n    printf("Final value    : %d\\n", counter);\n    return 0;\n}\n')),(0,a.kt)("p",null,"\u4e0a\u9762\u7a0b\u5e8f\u4f5c\u7528\u662f\u4e3b\u7a0b\u5e8f\u5229\u7528 Pthread_create() \u521b\u5efa\u4e24\u4e2a\u7ebf\u7a0b\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u8fd0\u884c\u5728 worker() \u51fd\u6570\u4e2d\u3002loops\u7684\u503c\u7531\u7ec8\u7aef\u8f93\u5165\u3002"),(0,a.kt)("p",null,"\u5c1d\u8bd5\u8fd0\u884c\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"prompt> gcc -o thread threads.c -Wall -pthread\nprompt> ./thread 100000 \nInitial value : 0\nFinal value   : 143012\nprompt> ./thread 100000\nInitial value : 0\nFinal value  : 137298\n")),(0,a.kt)("p",null,"\u53d1\u73b0\u6709\u95ee\u9898\u554a\uff0c\u9884\u8bbe100000\uff0c\u6309\u671f\u671b\u8bb2\u6700\u7ec8\u503c\u5e94\u8be5\u662f200000\u554a\uff1f\u4f46\u518d\u6b21\u8fd0\u884c\uff0c\u4e0d\u4ec5\u4e0d\u662f200000\uff0c\u800c\u4e14\u548c\u4e0a\u9762\u503c\u8fd8\u4e0d\u4e00\u6837\u3002"),(0,a.kt)("p",null,"\u4e0a\u9762\u7a0b\u5e8f\u5173\u952e\u90e8\u5206\u662f\u589e\u52a0\u5171\u4eab\u8ba1\u6570\u5668\u7684\u5730\u65b9\uff0c\u5b83\u9700\u89813\u6761\u6307\u4ee4\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u8ba1\u6570\u5668\u7684\u503c\u4ece\u5185\u5b58\u52a0\u8f7d\u5230\u5bc4\u5b58\u5668"),(0,a.kt)("li",{parentName:"ol"},"\u5c06\u5176\u9012\u589e"),(0,a.kt)("li",{parentName:"ol"},"\u5c06\u5176\u4fdd\u5b58\u56de\u5185\u5b58")),(0,a.kt)("p",null,"\u56e0\u4e3a\u8fd93\u6761\u6307\u4ee4\u5e76\u4e0d\u662f\u4ee5\u539f\u5b50\u65b9\u5f0f\u6267\u884c\u7684\uff0c\u6240\u4ee5\u4f1a\u53d1\u751f\u5947\u602a\u7684\u4e8b\u60c5\u3002"),(0,a.kt)("h3",{id:"\u6301\u4e45\u6027"},"\u6301\u4e45\u6027"),(0,a.kt)("p",null,"\u5728\u7cfb\u7edf\u5185\u5b58\u4e2d\u6570\u636e\u5bb9\u6613\u4e22\u5931\uff08DRAM\u65b9\u5f0f\u5b58\u50a8\uff09\uff0c\u5982\u679c\u65ad\u7535\u6216\u7cfb\u7edf\u5d29\u6e83\uff0c\u5185\u5b58\u4e2d\u6240\u6709\u6570\u636e\u90fd\u4f1a\u4e22\u5931\uff0c\u56e0\u6b64\u9700\u8981\u8f6f\u786c\u4ef6\u6765\u6301\u4e45\u5730\u5b58\u50a8\u6570\u636e\u3002"),(0,a.kt)("p",null,"\u5728\u73b0\u4ee3\u7cfb\u7edf\u4e2d\uff0c\u786c\u76d8\u9a71\u52a8\u5668\u662f\u5b58\u50a8\u957f\u671f\u4fdd\u5b58\u4fe1\u606f\u7684\u901a\u7528\u5b58\u50a8\u5e93\uff0c",(0,a.kt)("strong",{parentName:"p"},"\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7ba1\u7406\u78c1\u76d8\u7684\u8f6f\u4ef6\u901a\u5e38\u79f0\u4e3a\u6587\u4ef6\u7cfb\u7edf"),"\u3002"),(0,a.kt)("h2",{id:"\u4e8c\u8fdb\u7a0b"},"\u4e8c\u3001\u8fdb\u7a0b"),(0,a.kt)("p",null,"\u4e00\u4e2a\u7cfb\u7edf\u4e2d\u53ef\u80fd\u4f1a\u6709\u4e0a\u767e\u4e2a\u8fdb\u7a0b\u540c\u65f6\u8fd0\u884c\uff0c\u4f46\u7269\u7406CPU\u662f\u6709\u9650\u7684\uff0c\u56e0\u6b64\u9762\u4e34\u7684\u6311\u6218\u662f\uff1a\u867d\u7136\u53ea\u6709\u5c11\u91cf\u7684\u7269\u7406CPU\u53ef\u7528\uff0c\u4f46\u662f\u64cd\u4f5c\u7cfb\u7edf\u5982\u4f55\u63d0\u4f9b\u51e0\u4e4e\u6709\u65e0\u6570\u4e2aCPU\u53ef\u7528\u7684\u5047\u8c61\uff1f"),(0,a.kt)("p",null,"\u65f6\u5206\u5171\u4eab\u673a\u5236\uff1a\u64cd\u4f5c\u7cfb\u7edf\u5171\u4eab\u8d44\u6e90\u6240\u4f7f\u7528\u7684\u6700\u57fa\u672c\u7684\u6280\u672f\u4e4b\u4e00\uff0c\u901a\u8fc7\u5141\u8bb8\u8d44\u6e90\u7531\u4e00\u4e2a\u5b9e\u4f53\u4f7f\u7528\u4e00\u5c0f\u6bb5\u65f6\u95f4\uff0c\u7136\u540e\u7531\u53e6\u4e00\u4e2a\u5b9e\u4f53\u518d\u4f7f\u7528\u4e00\u5c0f\u6bb5\u65f6\u95f4\uff0c\u5982\u6b64\u8d44\u6e90\u5c31\u80fd\u88ab\u8bb8\u591a\u4eba\u5171\u4eab\u4e86\u3002"),(0,a.kt)("p",null,"\u7a7a\u5206\u5171\u4eab\u673a\u5236\uff1a\u6709\u4e9b\u8d44\u6e90\u5728\u7a7a\u95f4\u4e0a\u88ab\u5212\u5206\u7ed9\u5e0c\u671b\u4f7f\u7528\u5b83\u7684\u4eba\uff0c\u4f8b\u5982\u78c1\u76d8\u7a7a\u95f4\u662f\u4e00\u4e2a\u7a7a\u5206\u5171\u4eab\u8d44\u6e90\uff0c\u56e0\u6b64\u4e00\u65e6\u5c06\u5757\u5206\u7ed9\u6587\u4ef6\uff0c\u5728\u7528\u6237\u5220\u9664\u6587\u4ef6\u524d\uff0c\u4e0d\u53ef\u80fd\u5c06\u5b83\u5206\u914d\u7ed9\u5176\u4ed6\u6587\u4ef6\u3002"),(0,a.kt)("p",null,"\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u6709\u4e00\u4e9b\u667a\u80fd\u7b56\u7565\u7b97\u6cd5\u51b3\u5b9a\u8fd0\u884c\u54ea\u4e2a\u7a0b\u5e8f\u3002"),(0,a.kt)("h3",{id:"\u8fdb\u7a0b\u6982\u5ff5"},"\u8fdb\u7a0b\u6982\u5ff5"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u64cd\u4f5c\u7cfb\u7edf\u4e3a\u6b63\u5728\u8fd0\u884c\u7684\u7a0b\u5e8f\u63d0\u4f9b\u7684\u62bd\u8c61\uff0c\u5c31\u662f\u6240\u8c13\u7684\u8fdb\u7a0b\u3002")),(0,a.kt)("p",null,"\u8fdb\u7a0b\u7684\u673a\u5668\u5f62\u6001\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u6307\u4ee4\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u8fd0\u884c\u7684\u7a0b\u5e8f\u8bfb\u5199\u6570\u636e\u4e5f\u5728\u5185\u5b58\u4e2d"),(0,a.kt)("li",{parentName:"ol"},"\u8bb8\u591a\u6307\u4ee4\u660e\u786e\u8bfb\u53d6\u6216\u66f4\u65b0\u5bc4\u5b58\u5668")),(0,a.kt)("h3",{id:"\u8fdb\u7a0b\u521b\u5efa"},"\u8fdb\u7a0b\u521b\u5efa"),(0,a.kt)("p",null,"\u64cd\u4f5c\u7cfb\u7edf\u8fd0\u884c\u7a0b\u5e8f\u4f9d\u6b21\u505a\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u5c06\u4ee3\u7801\u548c\u6240\u6709\u9759\u6001\u6570\u636e\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u52a0\u8f7d\u5230\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u4e2d\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u6267\u884c\u4e00\u4e9b\u521d\u59cb\u5316\u64cd\u4f5c",(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"\u5fc5\u987b\u4e3a\u7a0b\u5e8f\u7684\u8fd0\u884c\u65f6\u6808\u5206\u914d\u4e00\u4e9b\u5185\u5b58\uff0c\u5e76\u63d0\u4f9b\u7ed9\u8fdb\u7a0b\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u53ef\u80fd\u4e3a\u7a0b\u5e8f\u7684\u5806\u5206\u914d\u4e00\u4e9b\u5185\u5b58\uff0c\u5e76\u63d0\u4f9b\u7ed9\u8fdb\u7a0b\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u53ef\u80fd\u6267\u884c I/O \u8bbe\u7f6e\u76f8\u5173\u4efb\u52a1\u3002"))),(0,a.kt)("li",{parentName:"ol"},"\u542f\u52a8\u7a0b\u5e8f\uff0c\u5728\u5165\u53e3\u8fd0\u884c\uff0c\u8df3\u8f6c\u5230 ",(0,a.kt)("inlineCode",{parentName:"li"},"main()")," \u8fdb\u7a0b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5c06 CPU \u63a7\u5236\u6743\u8f6c\u79fb\u5230\u65b0\u521b\u5efa\u7684\u8fdb\u7a0b\u4e2d\uff0c\u4ece\u800c\u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\u3002")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"\u7a0b\u5e8f\u52a0\u8f7d\u5230\u8fdb\u7a0b",src:t(1166).Z,width:"530",height:"582"})),(0,a.kt)("h3",{id:"\u8fdb\u7a0b\u72b6\u6001"},"\u8fdb\u7a0b\u72b6\u6001"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u8fd0\u884c\uff1a\u8fdb\u7a0b\u6b63\u5728\u5904\u7406\u5668\u4e0a\u8fd0\u884c\uff0c\u610f\u5473\u7740\u6b63\u5728\u6267\u884c\u6307\u4ee4\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u5c31\u7eea\uff1a\u8fdb\u7a0b\u5df2\u51c6\u5907\u597d\u8fd0\u884c\uff0c\u4f46\u7531\u4e8e\u67d0\u4e9b\u539f\u56e0\uff0c\u64cd\u4f5c\u7cfb\u7edf\u9009\u62e9\u4e0d\u5728\u6b64\u65f6\u8fd0\u884c\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u963b\u585e\uff1a\u8fdb\u7a0b\u6267\u884c\u67d0\u79cd\u64cd\u4f5c\uff0c\u76f4\u5230\u53d1\u751f\u5176\u4ed6\u4e8b\u60c5\u624d\u4f1a\u51c6\u5907\u8fd0\u884c\u3002\u6bd4\u5982\u8fdb\u7a0b\u5411\u78c1\u76d8\u53d1\u8d77 I/O \u8bf7\u6c42\u65f6\u5c31\u4f1a\u963b\u585e\uff0c\u8fd9\u65f6\u5019\u5176\u4ed6\u8fdb\u7a0b\u53ef\u4ee5\u4f7f\u7528\u5904\u7406\u5668\u3002")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"\u8fdb\u7a0b\u72b6\u6001\u8f6c\u6362",src:t(9250).Z,width:"379",height:"322"})),(0,a.kt)("p",null,"\u6bd4\u5982\u67092\u4e2a\u8fdb\u7a0b\uff0c\u8fdb\u7a0b Process0 \u4f1a\u53d1\u8d77 I/O \u8bf7\u6c42\uff0c\u90a3\u4e48\u8fd0\u884c\u5c31\u662f\u8fd9\u6837\u7684\uff1a"),(0,a.kt)("p",null,"Process0 \u53d1\u8d77 I/O \u5e76\u88ab\u963b\u585e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u53d1\u73b0\u5b83\u4e0d\u4f7f\u7528 CPU \u4e86\uff0c\u5c31\u5f00\u59cb\u8fd0\u884c Process1\uff0c\u5f53 Process0 \u7684 I/O \u5b8c\u6210\u4e86\uff0c\u90a3\u4e48 Process0 \u79fb\u4f1a\u5c31\u7eea\u72b6\u6001\uff0c\u6700\u540e Process1 \u7ed3\u675f\uff0c\u8fd0\u884c Process0\uff0c\u7136\u540e\u5b8c\u6210\u3002"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"CPU\u548cIO",src:t(4906).Z,width:"806",height:"643"})),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"\u5f53 I/O \u5b8c\u6210\u540e\uff0c\u7cfb\u7edf\u51b3\u5b9a\u4e0d\u5207\u6362\u56de Process0 \uff0c\u8fd9\u662f\u4e00\u4e2a\u597d\u7684\u51b3\u7b56\u5417\uff1f"),(0,a.kt)("p",{parentName:"admonition"},"\u4e0d\u4e00\u5b9a\uff0c\u770b\u60c5\u51b5\uff0c\u8fd9\u662f\u540e\u9762\u8981\u8003\u8651\u7684\u3002")),(0,a.kt)("h3",{id:"\u8fdb\u7a0b\u4fe1\u606f\u7684\u6570\u636e\u7ed3\u6784pcb"},"\u8fdb\u7a0b\u4fe1\u606f\u7684\u6570\u636e\u7ed3\u6784\uff08PCB\uff09"),(0,a.kt)("p",null,"\u6211\u4eec",(0,a.kt)("strong",{parentName:"p"},"\u5c06\u5b58\u50a8\u5173\u4e8e\u8fdb\u7a0b\u4fe1\u606f\u7684\u4e2a\u4f53\u7ed3\u6784\u79f0\u4e3a\u8fdb\u7a0b\u63a7\u5236\u5757"),"\uff08Process Control Block, PCB\uff09\u3002"),(0,a.kt)("p",null,"\u6bd4\u5982\u4e0b\u9762\u5c31\u662f ",(0,a.kt)("inlineCode",{parentName:"p"},"xv6")," \u5185\u6838\u4e2d\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u4fe1\u606f\u7c7b\u578b\uff0c\u771f\u6b63\u64cd\u4f5c\u7cfb\u7edf\u5b58\u5728\u7c7b\u4f3c\u7684\u8fdb\u7a0b\u7ed3\u6784\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"// the registers xv6 will save and restore\n// to stop and subsequently restart a process\nstruct context {\n  int eip;\n  int esp;\n  int ebx;\n  int ecx;\n  int edx;\n  int esi;\n  int edi;\n  int ebp;\n};\n\n// the different states a process can be in\nenum proc_state { UNUSED, EMBRYO, SLEEPING,\n                  RUNNABLE, RUNNING, ZOMBIE };\n\n// the information xv6 tracks about each process\n// including its register context and state\nstruct proc {\n  char *mem;                   // Start of process memory\n  uint sz;                     // Size of process memory\n  char *kstack;                // Bottom of kernel stack\n                               // for this process\n  enum proc_state state;       // Process state\n  int pid;                     // Process ID\n  struct proc *parent;         // Parent process\n  void *chan;                  // If non-zero, sleeping on chan\n  int killed;                  // If non-zero, have been killed\n  struct file *ofile[NOFILE];  // Open files\n  struct inode *cwd;           // Current directory\n  struct context context;      // Switch here to run process\n  struct trapframe *tf;        // Trap frame for the\n                               // current interrupt\n};\n")),(0,a.kt)("h3",{id:"\u8fdb\u7a0bapi"},"\u8fdb\u7a0bAPI"))}d.isMDXComponent=!0},4906:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/CPU\u548cIO-7d952b3185ea021e010d13c4e6859def.png"},1166:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/\u7a0b\u5e8f\u52a0\u8f7d\u5230\u8fdb\u7a0b-12915a5d906c90396bc2f99f0d6b5a8f.png"},9250:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/\u8fdb\u7a0b\u72b6\u6001\u8f6c\u6362-2071772f311762be6a419ab391eb7834.png"}}]);